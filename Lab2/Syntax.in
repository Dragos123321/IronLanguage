The words - predefined tokens are specified between " and ":

decllist ::= declaration | declaration ";" decllist

declaration ::= "LET" "IDENTIFIER ":" type

type1 ::= "BOOL" | "CHAR" | "INT" | "DOUBLE" | "UINT"

arraydecl ::= "VEC" "(" "nr" ";" "type1" ")"

type ::= type1|arraydecl

program ::= stmt | stmt ";" program

stmt ::= simplstmt | structstmt

simplstmt ::= assignstmt | iostmt

assignstmt ::= IDENTIFIER "=" expression

expression ::= expression "+"|"-" term | term

term ::= term "*"|"/"|"%" factor | factor

factor ::= "(" expression ")" | IDENTIFIER

iostmt ::= "READ" "(" IDENTIFIER ")" | "PRINT" "(" IDENTIFIER " | "STRING" {"," "IDENTIFIER"} ")"

structstmt ::= ifstmt | whilestmt

ifstmt ::= "IF" condition "{" stmt "}" {"ELSE IF " stmt} ["ELSE" stmt]

whilestmt ::= "WHILE" condition "{" stmt "}"

condition ::= expression RELATION expression

RELATION ::= "<" | "<=" | "==" | "!=" | ">=" | ">"