N = 
	DIGIT
	NZDIGIT
	LETTER
	RELATION
	DIGITSEQ
	INT
	CHAR
	STRING
	CONSTANT
	IDENTIFIER
	SIMPLETYPE
	ARRAYDECL
	TYPE
	CONSTTYPE
	NOCONSTDECLARATION
	DECLARATION
	DECLLIST
	EXPRESSION
	TERM
	FACTOR
	IOSTMT
	CONDITION
	ELSECHECKSTMT
	IFSTMT
	WHILESTMT
	FORSTMT
	STRUCTSTMT
	ASSIGNMENT
	SIMPLESTMT
	STMT
	STMTLIST
	CMPDSTMT
	PROGRAM

T = 
	a
	b
	c
	d
	e
	f
	g
	h
	i
	j
	k
	l
	m
	n
	o
	p
	q
	r
	s
	t
	u
	v
	w
	x
	y
	z
	0
	1
	2
	3
	4
	5
	6
	7
	8
	9
	"
	'
	+ 
	- 
	* 
	/ 
	% 
	= 
	< 
	<= 
	== 
	> 
	>= 
	!= 
	! 
	and
	or
	of
	(
	) 
	[
	] 
	{
	}  
	: 
	; 
	,
	let 
	input
	output
	check
	else
	loop
	while
	do
	const

P = 
	DIGIT -> 0|1|2|3|4|5|6|7|8|9
	NZDIGIT -> 1|2|3|4|5|6|7|8|9
	LETTER -> a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z
	RELATION -> <|<=|==|!=|>=|>
	DIGITSEQ -> DIGIT|DIGITSEQ
	INT -> 0|NZDIGIT|NZDIGIT$DIGITSEQ|-$NZDIGIT$DIGITSEQ
	CHAR -> LETTER|DIGIT
	STRING -> ""|CHAR|STRING
	CONSTANT -> INT|CHAR|STRING
	IDENTIFIER -> LETTER|_$LETTER|LETTER,DIGITSEQ|IDENTIFIER
	SIMPLETYPE -> bool|char|int
	ARRAYDECL -> array$[$INT$]$of$SIMPLETYPE$;
	TYPE -> SIMPLETYPE|ARRAYDECL
	CONSTTYPE -> const$TYPE
	NOCONSTDECLARATION -> let$IDENTIFIER$:$simpletype$;|let$IDENTIFIER$$=$EXPRESSION$;|let$IDENTIFIER$$=$ARRAYDECL$;
	DECLARATION -> NOCONSTDECLARATION|const$NOCONSTDECLARATION
	DECLLIST -> DECLARATION|DECLARATION$DECLLIST
	EXPRESSION -> EXPRESSION$+$TERM|EXPRESSION$-$TERM|TERM
	TERM -> TERM$*$FACTOR|TERM$/$FACTOR|TERM$%$FACTOR|FACTOR
	FACTOR -> ($EXPRESSION$)|IDENTIFIER|CONSTANT
	IOSTMT -> input$($IDENTIFIER$)$;|output$($IDENTIFIER$)$;|output$($string$)$;|output$($number$)$;
	CONDITION -> EXPRESSION$RELATION$EXPRESSION
	ELSECHECKSTMT -> else check$($CONDITION$)${$STMT$}
	IFSTMT -> check$($CONDITION$)${$STMT$}$|check$($CONDITION$)${$STMT$}$ELSECHECKSTMT|check$($CONDITION$)${$STMT$}$else${$STMT$}|check$($CONDITION$)${$STMT$}$ELSECHECKSTMT$$else${$STMT$}
	WHILESTMT -> while$CONDITION$do$CMPDSTMT
	FORSTMT -> loop$($let$IDENTIFIER$=$EXPRESSION$;$CONDITION$;$ASSIGNMENT$)$CMPDSTMT
	STRUCTSTMT -> IFSTMT|WHILESTMT|CMPDSTMT|FORSTMT
	ASSIGNMENT -> IDENTIFIER$=$EXPRESSION$;
	SIMPLESTMT -> ASSIGNMENT|IOSTMT
	STMT -> SIMPLESTMT|STRUCTSTMT
	STMTLIST -> STMT|STMT$STMTLIST
	CMPDSTMT -> "{" STMTLIST "}"
	PROGRAM -> STMTLIST|DECLLIST|PROGRAM

s = PROGRAM